name: Release

on: 
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        APPLE_API_KEY_DATA: ${{ secrets.APPLE_API_KEY_DATA }}
        APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
      run: |
        # Import certificate and private key
        echo $BUILD_CERTIFICATE_BASE64 | base64 -d -o Signing.p12
        security create-keychain -p $KEYCHAIN_PASSWORD ci.keychain
        security default-keychain -s ci.keychain
        security list-keychains -s ci.keychain
        security import ./Signing.p12 -k ci.keychain -P $P12_PASSWORD -A
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $KEYCHAIN_PASSWORD ci.keychain

        # Import Profiles
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo $BUILD_PROVISION_PROFILE_BASE64 | base64 -d -o pp.provisionprofile
        PP_UUID=`grep UUID -A1 -a pp.provisionprofile | grep -io "[-A-F0-9]\{36\}"`
        cp pp.provisionprofile ~/Library/MobileDevice/Provisioning\ Profiles/$PP_UUID.provisionprofile

        ls -l ~/Library/MobileDevice/Provisioning\ Profiles
        shasum -a 256 ~/Library/MobileDevice/Provisioning\ Profiles/*

        # Create directories for Notorization
        mkdir ~/.private_keys
        echo -n "$APPLE_API_KEY_DATA" > ~/.private_keys/AuthKey_$APPLE_API_KEY_ID.p8

    - name: Set Environment
      run: sudo xcrun xcode-select -s /Applications/Xcode_13.2.1.app

    - name: Build app
      run: xcrun xcodebuild -allowProvisioningUpdates -scheme toucli -archivePath Archive.xcarchive archive

    - name: First ZIP
      run: ditto -c -k --sequesterRsrc --keepParent Archive.xcarchive/Products/Applications/toucli.app ./toucli.zip

    - name: Notarize
      env: 
        APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
        APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
      run: |
        xcrun notarytool submit --key ~/.private_keys/AuthKey_$APPLE_API_KEY_ID.p8 --key-id $APPLE_API_KEY_ID --issuer $APPLE_API_ISSUER toucli.zip --wait

    - name: Staple
      run: xcrun stapler staple Archive.xcarchive/Products/Applications/toucli.app

    - name: New ZIPs
      run: |
        ditto -c -k --sequesterRsrc --keepParent Archive.xcarchive/Products/Applications/toucli.app ./toucli.zip
        ditto -c -k --sequesterRsrc --keepParent  Archive.xcarchive ./Archive.zip

    - name: Document SHAs
      run: |
            echo "sha-256:"
            shasum -a 256 toucli.zip
            shasum -a 256 Archive.zip

    - name: Upload App to Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: toucli.zip
        path: toucli.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: |
          Update description

          ## Features


          ## Fixes


          ## Minimum macOS Version


          ## Build
          https://github.com/pathtofile/toucli/actions/runs/${{ github.run_id }}
        draft: true
        prerelease: false

    - name: Upload App to Release
      id: upload-release-asset-app
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./toucli.zip
        asset_name: toucli.zip
        asset_content_type: application/zip
    - name: Upload App to Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: toucli.zip
        path: toucli.zip
    - name: Upload Archive to Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: Archive.zip
        path: Archive.zip
